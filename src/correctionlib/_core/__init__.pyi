from typing import Iterator, Type, TypeVar, Union

class Correction:
    @property
    def name(self) -> str: ...
    @property
    def description(self) -> str: ...
    @property
    def version(self) -> int: ...
    def evaluate(self, *args: Union[str, int, float]) -> float: ...

T = TypeVar("T", bound="CorrectionSet")

class CorrectionSet:
    @classmethod
    def from_file(cls: Type[T], filename: str) -> T: ...
    @classmethod
    def from_string(cls: Type[T], data: str) -> T: ...
    @property
    def schema_version(self) -> int: ...
    def __getitem__(self, key: str) -> Correction: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[str]: ...
